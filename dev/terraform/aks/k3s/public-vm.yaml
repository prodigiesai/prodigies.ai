- name: Setup and Deploy Public  VM
  hosts: public_vm
  become: true
  gather_facts: false
  vars:
    ansible_python_interpreter: /usr/bin/python3
  tasks:

    - name: Install Homebrew (if not installed)
      ansible.builtin.shell: |
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      register: homebrew_install_result
      changed_when: homebrew_install_result.rc == 0

    - name: Install the latest version of Python 3 using Homebrew
      ansible.builtin.package:
        name: python@3
        state: present
      register: python_install_result

    - name: Verify Python installation
      ansible.builtin.command: python3 --version
      register: python_version_output
      changed_when: false

    - name: Display Python version
      ansible.builtin.debug:
        msg: "Python version installed locally: {{ python_version_output.stdout }}"

    - name: Upgrade pip
      ansible.builtin.command: pip3 install --upgrade pip
      register: pip_upgrade_result
      changed_when: pip_upgrade_result.rc == 0

    - name: Download K3s installation script for public_vm
      ansible.builtin.get_url:
        url: https://get.k3s.io
        dest: /tmp/k3s_install.sh
        mode: '0755'
      become: true

    - name: Install K3s (Kubernetes) for public_vm
      ansible.builtin.command: /bin/bash /tmp/k3s_install.sh
      become: true
      args:
        creates: /usr/local/bin/k3s

    - name: Check if K3s service is running
      ansible.builtin.systemd:
        name: k3s
        state: started
      register: k3s_status
      changed_when: false
      failed_when: k3s_status.status.State != 'running'

    - name: Copy NGINX deployment file
      ansible.builtin.copy:
        src: nginx-deployment.yaml
        dest: /tmp/nginx-deployment.yaml
        mode: '0644'

    - name: Copy NGINX service file
      ansible.builtin.copy:
        src: nginx-service.yaml
        dest: /tmp/nginx-service.yaml
        mode: '0644'

    - name: Apply the NGINX deployment
      kubernetes.core.k8s:
        state: present
        namespace: default
        kubeconfig: /etc/rancher/k3s/k3s.yaml
        definition: "{{ lookup('file', '/tmp/nginx-deployment.yaml') }}"

    - name: Apply the NGINX service
      kubernetes.core.k8s:
        state: present
        namespace: default
        kubeconfig: /etc/rancher/k3s/k3s.yaml
        definition: "{{ lookup('file', '/tmp/nginx-service.yaml') }}"

    - name: Copy Archive.zip to the public VM
      ansible.builtin.copy:
        src: /Users/obarrientos/Documents/Prodigies/html/Archive.zip
        dest: /var/www/html/Archive.zip
        mode: "0644"

    - name: Uncompress the Archive.zip
      ansible.builtin.unarchive:
        src: /var/www/html/Archive.zip
        dest: /var/www/html/
        remote_src: true

    - name: Ensure index.html is available for Nginx
      ansible.builtin.copy:
        src: /var/www/html/Archive/index.html
        dest: /var/www/html/index.html
        remote_src: true
        mode: '0644'
      when: ansible_facts['distribution'] == 'Ubuntu'
